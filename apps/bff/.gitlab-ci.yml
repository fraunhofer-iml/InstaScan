variables:
  BFF_MODULE_NAME: "bff"
  BFF_PROJECT_DIR: $MODULE_DIR/$BFF_MODULE_NAME
  BFF_IMAGE_NAME: core/$BFF_MODULE_NAME
  BFF_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/$BFF_IMAGE_NAME
  BFF_SONAR_PROJECT_NAME: $SONAR_PROJECT_PREFIX-BFF
  BFF_SONAR_PROJECT_KEY: $BFF_SONAR_PROJECT_NAME
  BFF_SONAR_BASE_DIR: ./$BFF_PROJECT_DIR

bff:tests:
  stage: test
  extends: .install-npm-packages
  interruptible: true
  script:
    - npx nx test bff
  coverage: '/Lines \W+: (\d+\.\d+)%.*/'
  artifacts:
    paths:
      - "${BFF_PROJECT_DIR}/coverage"
    expire_in: 1 week
  allow_failure: false
  only:
    - merge_requests
    - main

bff:sonarqube-check:
  stage: quality-analysis
  image:
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: ['']
  variables:
    SONAR_USER_HOME: '/apps/bff/.sonar' # Defines the location of the analysis task cache
    GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - /apps/bff/.sonar/cache
  script:
    - echo ${BFF_SONAR_PROJECT_NAME}
    - >
      sonar-scanner
      -Dsonar.projectBaseDir=./apps/bff/
      -Dsonar.pullrequest.key=${CI_MERGE_REQUEST_IID}
      -Dsonar.pullrequest.branch=${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}
      -Dsonar.pullrequest.base=${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}
  allow_failure: false
  only:
    - merge_requests
    - main

bff:build:
  stage: build
  extends: .install-npm-packages
  interruptible: true
  script:
    - npx nx run bff:build
  artifacts:
    paths:
      - dist/apps/bff
  allow_failure: false
  only:
    - merge_requests
    - main

bff:latest-build:
  stage: archive
  image: docker
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull --cache-from $BFF_REGISTRY_IMAGE --build-arg APP=bff -t $BFF_REGISTRY_IMAGE:latest -f docker/nest.dockerfile  .
    - docker push $BFF_REGISTRY_IMAGE:latest
  allow_failure: false
  only:
    - main

bff:container-build:
  stage: archive
  image: docker
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull --cache-from $BFF_REGISTRY_IMAGE --build-arg APP=bff -t $BFF_REGISTRY_IMAGE:$CI_COMMIT_TAG -f docker/nest.dockerfile  .
    - docker push $BFF_REGISTRY_IMAGE:$CI_COMMIT_TAG
  allow_failure: false
  only:
    - tags
